{
  "openapi": "3.0.3",
  "info": {
    "title": "Casheer",
    "description": "This is a money transactions manager.",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "qscxzsewqazxcde@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "paths": {
    "/debts/": {
      "get": {
        "summary": "List all existing debts",
        "description": "This operation will list all existing debts.",
        "operationId": "listDebts",
        "parameters": [
          {
            "in": "query",
            "name": "person",
            "description": "The person in the returned debts must match the parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "John Cena"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1debts~1%7Bdbtid%7D/delete/responses/200/content/application~1json/schema/properties/data"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "example": "http://dumblinks.com/debts/"
                        },
                        "home": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "example": "http://dumblinks.com/home"
                            },
                            "title": {
                              "type": "string",
                              "example": "Home page of casheer API."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid debt request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "oneOf": [
                        {
                          "allOf": [
                            {
                              "$ref": "#/paths/~1debts~1/post/responses/422/content/application~1json/schema/properties/error/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "enum": [
                                    "Invalid Query Params"
                                  ]
                                },
                                "status": {
                                  "type": "number",
                                  "enum": [
                                    400
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "$ref": "#/paths/~1debts~1/post/responses/422/content/application~1json/schema/properties/error/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "enum": [
                                    "Invalid URL"
                                  ]
                                },
                                "status": {
                                  "type": "number",
                                  "enum": [
                                    400
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occured.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1debts~1/post/responses/422/content/application~1json/schema/properties/error/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "example": "Unknown Error",
                              "enum": [
                                "Unknown Error"
                              ]
                            },
                            "status": {
                              "type": "number",
                              "example": 500,
                              "enum": [
                                500
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new debt",
        "description": "This operation will create a new debt, given the provided debt information is valid.",
        "operationId": "createDebts",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "debt"
                        ]
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "person",
                          "total"
                        ],
                        "properties": {
                          "person": {
                            "type": "string",
                            "example": "Machi Tsutomu"
                          },
                          "total": {
                            "type": "object",
                            "properties": {
                              "currency": {
                                "type": "string",
                                "example": "USD"
                              },
                              "amount": {
                                "type": "number",
                                "example": 100
                              },
                              "exponent": {
                                "type": "number",
                                "example": -2
                              }
                            }
                          },
                          "details": {
                            "type": "string",
                            "example": "For the sexy times"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1debts~1%7Bdbtid%7D/delete/responses/200/content/application~1json/schema/properties/data"
                        }
                      ],
                      "type": "object",
                      "properties": {
                        "links": {
                          "example": "http://dumblinks.com/debts/100",
                          "type": "object",
                          "required": true,
                          "properties": {
                            "self": {
                              "type": "string",
                              "example": "http://dumblinks.com/debts/100",
                              "description": "A URI reference pointing to the link's target."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid debt request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "oneOf": [
                        {
                          "allOf": [
                            {
                              "$ref": "#/paths/~1debts~1/post/responses/422/content/application~1json/schema/properties/error/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "enum": [
                                    "Invalid JSON Body"
                                  ]
                                },
                                "status": {
                                  "type": "number",
                                  "enum": [
                                    400
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid debt sent in request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "title",
                            "status",
                            "details"
                          ],
                          "properties": {
                            "title": {
                              "type": "string",
                              "example": "Missing URL parameters"
                            },
                            "status": {
                              "type": "number",
                              "example": 400
                            },
                            "details": {
                              "type": "string",
                              "example": "Please add URL param"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "enum": [
                                "Invalid Resource"
                              ]
                            },
                            "status": {
                              "type": "number",
                              "enum": [
                                422
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/paths/~1debts~1/get/responses/500"
          }
        }
      }
    },
    "/debts/{dbtid}": {
      "get": {
        "summary": "Retrieve the data of an existing debt.",
        "description": "This operation will return the data of an existing debt, given the provided debt id exists.",
        "operationId": "getDebt",
        "parameters": [
          {
            "in": "path",
            "name": "dbtid",
            "description": "The ID of the debt to be retrieved.",
            "required": true,
            "schema": {
              "type": "number",
              "example": 500
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/paths/~1debts~1/post/responses/200/content/application~1json/schema/properties/data"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Debt was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "oneOf": [
                        {
                          "allOf": [
                            {
                              "$ref": "#/paths/~1debts~1/post/responses/422/content/application~1json/schema/properties/error/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "enum": [
                                    "Resource Not Found"
                                  ]
                                },
                                "status": {
                                  "type": "number",
                                  "enum": [
                                    404
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/paths/~1debts~1/get/responses/500"
          }
        }
      },
      "patch": {
        "summary": "Update the data of an existing debt.",
        "description": "This operation will update the data of an existing debt, given the provided debt exists.",
        "operationId": "updateDebt",
        "parameters": [
          {
            "in": "path",
            "name": "dbtid",
            "description": "The ID of the debt to be retrieved.",
            "required": true,
            "schema": {
              "type": "number",
              "example": 500
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/paths/~1debts~1/post/requestBody/content/application~1json/schema/properties/data"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/paths/~1debts~1/post/responses/200/content/application~1json/schema/properties/data"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Debt was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "oneOf": [
                        {
                          "$ref": "#/paths/~1debts~1%7Bdbtid%7D/get/responses/404/content/application~1json/schema/properties/error/oneOf/0"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid debt sent in request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/paths/~1debts~1/post/responses/422/content/application~1json/schema/properties/error"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/paths/~1debts~1/get/responses/500"
          }
        }
      },
      "delete": {
        "summary": "Delete an existing debt.",
        "description": "This operation will remove an existing debt, given the provided debt exists.",
        "operationId": "updateDebt",
        "parameters": [
          {
            "in": "path",
            "name": "dbtid",
            "description": "The ID of the debt to be retrieved.",
            "required": true,
            "schema": {
              "type": "number",
              "example": 500
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "id",
                        "type",
                        "attributes",
                        "links"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 100
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "debt"
                          ]
                        },
                        "attributes": {
                          "type": "object",
                          "required": [
                            "person",
                            "total",
                            "details",
                            "timestamp"
                          ],
                          "properties": {
                            "person": {
                              "type": "string",
                              "example": "Machi Tsutomu"
                            },
                            "total": {
                              "$ref": "#/paths/~1debts~1/post/requestBody/content/application~1json/schema/properties/data/properties/attributes/properties/total"
                            },
                            "details": {
                              "type": "string",
                              "example": "For the sexy times"
                            },
                            "timestamps": {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": {
                                    "value": "1967-02-20T19:38:00Z"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Debt was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "oneOf": [
                        {
                          "$ref": "#/paths/~1debts~1%7Bdbtid%7D/get/responses/404/content/application~1json/schema/properties/error/oneOf/0"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/paths/~1debts~1/get/responses/500"
          }
        }
      }
    }
  }
}
