openapi: 3.0.3
info:
  title: Casheer
  description: |-
    This is a money transactions manager based on the OpenAPI 3.0 specification.
  termsOfService: http://swagger.io/terms/
  contact:
    email: qscxzsewqazxcde@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
paths:
  /debts:
    get:
      summary: List all existing debts
      description: This operation will list all existing debts.
      operationId: listDebts
      parameters:
        - in: query
          name: person
          description: The person in the returned debts must match the parameter.
          required: false
          schema:
            type: string
            example: John Cena
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/DebtWithLink"
        "400":
          description: Invalid debt request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: "#/components/schemas/invalidQueryParamsError"
                      - $ref: "#/components/schemas/invalidURLError"
        "500":
          $ref: "#/components/responses/unexpectedError"
components:
  examples:
    kobainTime:
      value: "1967-02-20T19:38:00Z"
    boringTime:
      value: "2000-01-10T10:00:00Z"

  responses:
    unexpectedError:
      description: "An unexpected error occured."
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/unknownError"

  schemas:
    unknownError:
      allOf:
        - $ref: "#/components/schemas/jsonapiError"
        - type: object
          properties:
            title:
              type: string
              example: "Unknown Error"
              enum:
                - "Unknown Error"
            status:
              type: number
              example: 500
              enum:
                - 500
    resourceAlreadyExistsError:
      allOf:
        - $ref: "#/components/schemas/jsonapiError"
        - type: object
          properties:
            title:
              type: string
              enum:
                - "Resource Already Exists"
            status:
              type: number
              enum:
                - 404
    invalidURLError:
      allOf:
        - $ref: "#/components/schemas/jsonapiError"
        - type: object
          properties:
            title:
              type: string
              enum:
                - "Invalid URL"
            status:
              type: number
              enum:
                - 400
    invalidRequestBodyError:
      allOf:
        - $ref: "#/components/schemas/jsonapiError"
        - type: object
          properties:
            title:
              type: string
              enum:
                - "Invalid JSON Body"
            status:
              type: number
              enum:
                - 400
    invalidQueryParamsError:
      allOf:
        - $ref: "#/components/schemas/jsonapiError"
        - type: object
          properties:
            title:
              type: string
              enum:
                - "Invalid Query Params"
            status:
              type: number
              enum:
                - 400
    jsonapiError:
      type: object
      required: ["title", "status", "details"]
      properties:
        title:
          type: string
          example: Missing URL parameters
        status:
          type: number
          example: 400
        details:
          type: string
          example: "Please add URL param"
    jsonapiSelfLink:
      type: object
      required: ["self"]
      properties:
        self:
          type: string
          example: "http://dumblinks.com/debts/100"
          description: "A URI reference pointing to the link's target."
    monetaryValue:
      type: object
      properties:
        currency:
          type: string
          example: "USD"
        amount:
          type: number
          example: 100
        exponent:
          type: number
          example: -2
    timestamps:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          example:
            $ref: "#/components/examples/kobainTime"
    DebtWithLink:
      allOf:
        - $ref: "#/components/schemas/Debt"
        - type: object
          properties:
            links:
              type: object
              $ref: "#/components/schemas/jsonapiSelfLink"
    Debt:
      type: object
      required: ["id", "type", "attributes"]
      properties:
        id:
          type: integer
          format: int64
          example: 100
        type:
          type: string
          enum: ["debt"]
        attributes:
          type: object
          properties:
            person:
              type: string
              example: Machi Tsutomu
            total:
              $ref: "#/components/schemas/monetaryValue"
            details:
              type: string
              example: For the sexy times
            timestamps:
              $ref: "#/components/schemas/timestamps"
